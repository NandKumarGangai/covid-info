{"version":3,"sources":["components/summary.js","components/lastUpdate.js","components/header.js","components/showAllButton.js","components/showAllCountry.js","components/tableHeader.js","components/ServiceAPIs/index.js","components/showAllCountryStats.js","components/IndiaStateWise.js","components/CountryData.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Summary","className","style","backgroundColor","this","props","summary","cases","deaths","recovered","Component","LastUpdate","miliseconds","Date","Header","ShowAllButton","onClick","type","ShowAllCountry","country","state","todayCases","todayDeaths","active","critical","confirmed","hide","background","bgColor","scope","TableHeader","toggle","covid","require","axios","getAllData","a","JSON","getAll","stringify","getCountryData","getCountry","getAllCountryData","sort","getIndiaStateWiseData","fetchStateWiseData","get","then","res","data","catch","err","console","log","ShowAllCountryStats","current","setState","parse","error","length","map","index","key","IndiaStateWise","source","lastRefreshed","total","statewise","totalProps","i","href","CountryData","getIndiaStateWiseStatus","indiaStatus","show","search","onChange","e","preventDefault","target","value","onSearch","showAllCountry","Footer","id","App","updated","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.626352b1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './styles/summary.css';\r\n\r\nexport default class Summary extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='summary' style={{backgroundColor: '#eee'}}>\r\n        <div className=''>\r\n          <p className='summary-title'>Confirmed</p>\r\n          <p className='summary-content'>{this.props.summary.cases}</p>\r\n        </div>\r\n        <div className=''>\r\n          <p className='summary-title'>Deaths</p>\r\n          <p className='summary-content text-danger'>{this.props.summary.deaths}</p>\r\n        </div>\r\n        <div className=''>\r\n          <p className='summary-title'>Recovered  </p>\r\n          <p className='summary-content text-success'>{this.props.summary.recovered}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function LastUpdate({ miliseconds = 0 }) {\r\n    return (\r\n        <p className='text-center last-update'>\r\n           { miliseconds ? `${new Date(miliseconds)}` : '' } \r\n        </p>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark text-light\">\r\n            <p className=\"navbar-brand\">COVID-19 CORONAVIRUS PANDEMIC</p>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './styles/show-all-button.css';\r\n\r\nexport default function ShowAllButton({ onClick }) {\r\n    return (\r\n        <div className=\"show-all-btn\">\r\n            <button\r\n            type=\"button\"\r\n            className=\"btn\"\r\n            onClick={onClick}\r\n        >\r\n            See all countries stats\r\n        </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ShowAllCountry({\r\n    country = '',\r\n    state = '',\r\n    cases = 0,\r\n    todayCases = 0,\r\n    deaths = 0,\r\n    todayDeaths = 0,\r\n    recovered = 0,\r\n    active = 0,\r\n    critical = 0,\r\n    confirmed = 0,\r\n    hide = false,\r\n    background = false\r\n}) {\r\n    const bgColor = background ? 'bg-info text-dark h5' : '';\r\n    return (\r\n        <tr className={bgColor}>\r\n            <th scope=\"col\">\r\n                <p>\r\n                    { country ? country : state }\r\n                </p>\r\n            </th>\r\n            <td>\r\n                <p>\r\n                    { cases ? cases : confirmed }\r\n                </p>\r\n            </td>\r\n            {\r\n                !hide &&\r\n                <td className='bg-warning'>\r\n                    <p>\r\n                        {`+${todayCases}`}\r\n                    </p>\r\n                </td>\r\n            }\r\n            <td>\r\n                <p className='text-danger'>\r\n                    {deaths}\r\n                </p>\r\n            </td>\r\n            <td className='hide-sm'>\r\n                <p>\r\n                    {active}\r\n                </p>\r\n            </td>\r\n            {\r\n                !hide &&\r\n                <td className='hide-sm'>\r\n                    <p>\r\n                        {critical}\r\n                    </p>\r\n                </td>\r\n            }\r\n            <td>\r\n                <p className={`text-success ${bgColor}`}>\r\n                    {recovered}\r\n                </p>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function TableHeader({ toggle = 'country', hide = false }) {\r\n    return (\r\n        <tr>\r\n            <th scope=\"col\">{toggle}</th>\r\n            <th scope=\"col\">Confirmed</th>\r\n            {\r\n                !hide &&\r\n                <th scope=\"col\">Todays Case</th>\r\n            }\r\n            <th scope=\"col\">Deaths</th>\r\n            <th scope=\"col\" className='hide-sm'>Active</th>\r\n            {\r\n                !hide &&\r\n                <th scope=\"col\" className='hide-sm'>Critical</th>\r\n            }\r\n            <th scope=\"col\">Recovered</th>\r\n        </tr>\r\n    )\r\n}\r\n","const covid = require('novelcovid');\r\nconst axios = require('axios');\r\n\r\nconst indiaStateWiseAPI = 'https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise';\r\n\r\nexport const getAllData = async () => JSON.stringify(await covid.getAll());\r\n\r\nexport const getCountryData = async country => JSON.stringify(await covid.getCountry({ country }));\r\n\r\nexport const getAllCountryData = async () => JSON.stringify(await covid.getCountry({ sort: 'cases' }));\r\n\r\nexport const getIndiaStateWiseData = async () => fetchStateWiseData();\r\n\r\nconst fetchStateWiseData = () => axios.get(indiaStateWiseAPI)\r\n    .then(res => res.data)\r\n    .catch(err => console.log(err));\r\n","import React, { Component } from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport ShowAllCountry from './showAllCountry';\r\nimport TableHeader from './tableHeader';\r\nimport { getAllCountryData } from './ServiceAPIs';\r\nimport './styles/table.css';\r\n\r\nexport default class ShowAllCountryStats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            summary: [],\r\n            current: 0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        getAllCountryData()\r\n            .then(data => this.setState({\r\n                summary: JSON.parse(data)\r\n            }))\r\n            .catch(err => console.error('Error: ', err));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.summary.length ?\r\n                        <table className=\"table table-sm text-center\">\r\n                            <thead className=\"thead-dark\">\r\n                                <TableHeader toggle={'Country'} />\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.summary.map((country, index) => <ShowAllCountry key={index} { ...country } />)\r\n                                }\r\n                            </tbody>\r\n                        </table> :\r\n                        <div className='text-center'>\r\n                            <Loader type='Oval' />\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport ShowAllCountry from './showAllCountry';\r\nimport './styles/india-state-wise.css';\r\n\r\nexport default function IndiaStateWise({\r\n    source = '',\r\n    lastRefreshed = '',\r\n    total = {},\r\n    statewise = []\r\n}) {\r\n    const totalProps = {\r\n        state: 'Total',\r\n        ...total\r\n    }\r\n    return (\r\n        <div>\r\n            <table className='table table-sm text-center'>\r\n                <thead className='bg-dark text-light'>\r\n                    <TableHeader toggle={'State'} hide={true} />\r\n                </thead>\r\n                <tbody>\r\n                    <ShowAllCountry hide={true} {...totalProps} background={true} />\r\n                    {\r\n                        statewise.map((state, i) => state.confirmed > 0\r\n                            ? <ShowAllCountry key={i} {...state} hide={true} />\r\n                            : null)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <p className='text-center last-update'>\r\n                {'**Above data is provided by '}\r\n                <a href={`${source}`}>\r\n                    {source}\r\n                </a>\r\n                {` and updated on ${new Date(lastRefreshed)}`}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n// import SearchBar from './searchBar';\r\nimport ShowAllButton from './showAllButton';\r\nimport ShowAllCountryStats from './showAllCountryStats';\r\nimport IndiaStateWise from './IndiaStateWise';\r\nimport {\r\n    getCountryData,\r\n    getIndiaStateWiseData\r\n} from './ServiceAPIs';\r\nimport './styles/country-data.css';\r\n\r\nexport default class CountryData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            summary: {},\r\n            show: false,\r\n            search: 'India',\r\n            showAllCountry: false,\r\n            indiaStatus: {}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getCountryData();\r\n        this.getIndiaStateWiseStatus();\r\n    }\r\n\r\n    getIndiaStateWiseStatus = () =>\r\n        getIndiaStateWiseData()\r\n            .then(res => this.setState({\r\n                indiaStatus: res.data,\r\n                show: true\r\n            }))\r\n            .catch(err => console.error(err));\r\n\r\n    getCountryData = () => {\r\n        getCountryData(this.state.search)\r\n            .then(data => this.setState({\r\n                summary: JSON.parse(data),\r\n            }))\r\n            .catch(err => console.error('Error: ', err));\r\n    }\r\n\r\n    onChange = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            search: e.target.value\r\n        })\r\n    }\r\n\r\n    onSearch = e => {\r\n        e.preventDefault();\r\n        this.getCountryData();\r\n        this.setState({\r\n            search: ''\r\n        })\r\n    }\r\n\r\n    showAllCountry = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            showAllCountry: true\r\n        })\r\n    }\r\n    render() {\r\n        console.log(this.state.indiaStatus);\r\n        return (\r\n            <>\r\n                <div className=''>\r\n                    <p className='text-center h6 bg-dark p-1 text-light'>\r\n                        { 'India official stats'}\r\n                    </p>\r\n                    {/* <SearchBar country={this.state.summary.country} onChange={this.onChange} onSubmit={this.onSearch} /> */}\r\n                </div>\r\n                <div className='country-data'>\r\n                    <div className=''>\r\n                        <p className='title'>Confirmed</p>\r\n                        <p className='content'>{this.state.summary.cases}</p>\r\n                    </div>\r\n                    <div className='bg-danger text-light'>\r\n                        <p className='title'>New Cases</p>\r\n                        <p className='content'>{`+${this.state.summary.todayCases}`}</p>\r\n                    </div>\r\n                    <div className='text-danger'>\r\n                        <p className='title'>Deaths</p>\r\n                        <p className='content'>{this.state.summary.deaths}</p>\r\n                    </div>\r\n                    <div className=''>\r\n                        <p className='title'>Active</p>\r\n                        <p className='content'>{this.state.summary.active}</p>\r\n                    </div>\r\n                    <div className=''>\r\n                        <p className='title'>Critical</p>\r\n                        <p className='content'>{this.state.summary.critical}</p>\r\n                    </div>\r\n                    <div className='text-success'>\r\n                        <p className='title'>Recovered</p>\r\n                        <p className='content'>{this.state.summary.recovered}</p>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.show\r\n                        ? <IndiaStateWise {...this.state.indiaStatus} />\r\n                        : <div className='text-center'>\r\n                            <Loader type='Oval' />\r\n                        </div>\r\n                }\r\n                <ShowAllButton onClick={this.showAllCountry} />\r\n                {\r\n                    this.state.showAllCountry &&\r\n                    <ShowAllCountryStats />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer id=\"sticky-footer\" className=\"py-4 bg-dark text-white-50 mt-4\">\r\n            <div className=\"container text-center\">\r\n                <small className='text-light'>Copyright &copy; Your Website</small>\r\n                <p>\r\n                    Developed by: Nandkumar Gangai\r\n                </p>\r\n            </div>\r\n        </footer>\r\n\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport Loader from 'react-loader-spinner'\nimport Summary from './components/summary';\nimport LastUpdate from './components/lastUpdate';\nimport Header from './components/header';\nimport CountryData from './components/CountryData';\nimport Footer from './components/footer';\nimport { getAllData } from './components/ServiceAPIs/index';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      summary: {},\n      show: false\n    }\n  }\n  componentDidMount() {\n      getAllData()\n        .then(data => this.setState({\n          summary: JSON.parse(data),\n          show: true\n        }))\n        .catch(err => console.error('Error: ', err));\n  }\n\n  render() {\n    console.log(this.state.summary);\n    return (\n      <div>\n        {\n          this.state.show ?\n          <>\n            <Header />\n            <div className='container'>\n              <LastUpdate miliseconds={this.state.summary.updated} />\n              <Summary summary={this.state.summary} />\n              <CountryData />\n            </div>\n            <Footer />\n            </> :\n            <div className='text-center'>\n              <Loader type='Oval' />\n            </div>\n        }\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}